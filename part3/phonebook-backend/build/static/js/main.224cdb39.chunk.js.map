{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["url","personService","getAllPersons","axios","get","then","response","data","addPerson","newPerson","post","deletePerson","personId","delete","updateNumber","person","put","id","Search","evHandler","onChange","Form","props","value","newName","newNameInput","newNumber","newNumberInput","type","onClick","Persons","personsToShow","buttonHandler","map","name","number","Notification","message","succesful","className","App","useState","persons","setPersons","setNewName","setNewNumber","filter","setFilter","notificationMsg","setNotificationMsg","useEffect","personsFromServer","toLowerCase","includes","event","target","preventDefault","personExists","find","undefined","Number","window","alert","confirm","personModified","setTimeout","catch","reason","personAdded","concat","newPersons","personas","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.224cdb39.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst url = \"/api/persons\"\r\n\r\nconst getAllPersons = () => {\r\n    return(\r\n        axios\r\n            .get(url)\r\n            .then(response => {\r\n                return(response.data)\r\n            })\r\n    )\r\n}\r\n\r\nconst addPerson = (newPerson) => {\r\n    return(\r\n        axios\r\n            .post(url, newPerson)\r\n            .then(response => {\r\n                return(response.data)\r\n            })\r\n    )\r\n}\r\n\r\nconst deletePerson = (personId) => {\r\n\r\n    axios.delete(`${url}/${personId}`)\r\n    return(personId)\r\n}\r\n\r\nconst updateNumber = (person) => {\r\n    return(\r\n        axios\r\n            .put(`${url}/${person.id}`, person)\r\n            .then(response => {\r\n                return(response.data)\r\n            })\r\n    )\r\n}\r\n\r\nconst personService = {getAllPersons, addPerson, deletePerson, updateNumber}\r\nexport default personService","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport './index.css'\n\nconst Search = ({evHandler}) => (\n  <p>Search: <input onChange={evHandler}/></p>\n)\n\nconst Form = (props) => (\n  <form>\n    <div>\n      name: <input value={props.newName} onChange={props.newNameInput}/>\n    </div>\n    <div>\n      number: <input value={props.newNumber} onChange={props.newNumberInput}/>\n    </div>\n    <div>\n      <button type=\"submit\" onClick={props.addPerson} >add</button>\n    </div>\n  </form>\n)\n\nconst Persons = ({personsToShow, buttonHandler}) => (\n  personsToShow.map((person) => (\n    <p key={person.name}>\n      {person.name} - {person.number} <button onClick={buttonHandler(person)}>delete</button>\n    </p>\n  ))\n)  \n\nconst Notification = ({message, succesful}) => {\n  if (message === '') {\n    return null\n  }\n  if (succesful) {    \n    return (\n      <div className=\"succesful\">\n        Added {message}\n      </div>\n    )\n  }else{\n    return (\n      <div className=\"error\">\n        Information of {message} has already been removed from server\n      </div>\n    )\n  }\n}\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ filter, setFilter] = useState('')\n  const [ notificationMsg, setNotificationMsg] = useState([''])\n\n  useEffect(() => {\n    personService\n      .getAllPersons()\n      .then(personsFromServer =>{\n        setPersons(personsFromServer)\n      })\n  }, [])\n\n  const personsToShow = filter === '' ? persons : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  const newNameInput = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const newNumberInput = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const searchEventHandler = (event) => {\n    setFilter(event.target.value)\n  }\n\n\n  const deleteHandlerGenerator = (person) => {\n    return (() =>  {\n      if (window.confirm(`delete ${person.name}`)){\n        personService.deletePerson(person.id)\n        const newPersons = persons.filter(personas => {\n          return (personas.id !== person.id)\n        })\n        setPersons(newPersons)\n      }\n    })\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personExists = persons.find( person => person.name === newName)\n    if (personExists !== undefined){\n      if (personExists.number === Number(newNumber)){\n        window.alert(`${newName} is already added to phonebook`)\n      } else if (window.confirm(`${personExists.name} is already added to phonebook, replace the old number with a new one?`)) {\n        personService\n          .updateNumber({...personExists, number: newNumber })\n          .then(personModified => {\n            setPersons(persons.map(person =>{\n              return(person.id === personModified.id ? personModified : person)\n            }))\n            setNotificationMsg([personModified.name, true])\n            setTimeout(()=>setNotificationMsg(['']),3000)\n          })\n          .catch(reason => {\n            setNotificationMsg([personExists.name, false])\n            setTimeout(()=>setNotificationMsg(['']),3000)\n          })\n      }\n    }else{\n      const newPerson = {name: newName, number: newNumber}\n      personService\n        .addPerson(newPerson)\n        .then(personAdded => {\n          setPersons(persons.concat(personAdded))      \n          setNewName('')\n          setNewNumber('')    \n          setNotificationMsg([personAdded.name, true])\n          setTimeout(()=>setNotificationMsg(['']),3000)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <Search evHandler={searchEventHandler}/>\n      <h2>Add new person</h2>\n        <Notification message={notificationMsg[0]} succesful={notificationMsg[1]}/>\n        <Form newName={newName}  newNameInput={newNameInput}\n              newNumber={newNumber} newNumberInput={newNumberInput}\n              addPerson={addPerson}\n        />\n      <h2>Numbers</h2>\n        <Persons personsToShow={personsToShow} buttonHandler={deleteHandlerGenerator} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}